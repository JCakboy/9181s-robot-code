16
{"last_modification_time":1536385319,"language":2,"import_file":"c:/users/chester/git projects/robot-code/--working/include/claw.hpp","args_hash":3430592511521802456,"includes":[{"line":3,"resolved_path":"c:/users/chester/git projects/robot-code/--working/include/main.h"}],"dependencies":["c:/users/chester/git projects/robot-code/--working/include/main.h","c:/users/chester/git projects/robot-code/--working/include/api.h","c:/users/chester/git projects/robot-code/--working/include/pros/adi.h","c:/users/chester/git projects/robot-code/--working/include/pros/llemu.h","c:/users/chester/git projects/robot-code/--working/include/display/lvgl.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_misc/lv_task.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_misc/lv_ll.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_misc/lv_mem.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_hal/lv_hal.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_hal/lv_hal_disp.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_misc/lv_color.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_hal/lv_hal_indev.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_misc/lv_area.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_hal/lv_hal_tick.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_core/lv_group.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_core/lv_obj.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_core/lv_style.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_misc/lv_anim.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_misc/lv_font.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_misc/lv_fonts/lv_symbol_def.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_core/lv_vdb.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_themes/lv_theme.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_themes/lv_theme_alien.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_objx/lv_bar.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_objx/lv_btn.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_core/lv_indev.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_objx/lv_cont.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_objx/lv_label.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_misc/lv_txt.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_objx/lv_btnm.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_objx/lv_cb.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_objx/lv_chart.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_objx/lv_line.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_objx/lv_ddlist.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_objx/lv_page.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_objx/lv_gauge.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_objx/lv_lmeter.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_objx/lv_img.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_draw/lv_draw.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_misc/lv_fs.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_objx/lv_kb.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_objx/lv_led.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_objx/lv_list.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_objx/lv_mbox.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_objx/lv_roller.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_objx/lv_slider.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_objx/lv_sw.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_objx/lv_ta.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_objx/lv_tabview.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_objx/lv_win.h","c:/users/chester/git projects/robot-code/--working/include/pros/misc.h","c:/users/chester/git projects/robot-code/--working/include/pros/motors.h","c:/users/chester/git projects/robot-code/--working/include/pros/rtos.h","c:/users/chester/git projects/robot-code/--working/include/pros/vision.h","c:/users/chester/git projects/robot-code/--working/include/pros/adi.hpp","c:/users/chester/git projects/robot-code/--working/include/pros/llemu.hpp","c:/users/chester/git projects/robot-code/--working/include/pros/misc.hpp","c:/users/chester/git projects/robot-code/--working/include/pros/motors.hpp","c:/users/chester/git projects/robot-code/--working/include/pros/rtos.hpp","c:/users/chester/git projects/robot-code/--working/include/pros/vision.hpp","c:/users/chester/git projects/robot-code/--working/include/armcontrol.hpp","c:/users/chester/git projects/robot-code/--working/include/balllauncher.hpp","c:/users/chester/git projects/robot-code/--working/include/constants.hpp","c:/users/chester/git projects/robot-code/--working/include/definitions.hpp","c:/users/chester/git projects/robot-code/--working/include/drivecontrol.hpp","c:/users/chester/git projects/robot-code/--working/include/ports.hpp","c:/users/chester/git projects/robot-code/--working/include/xdrivecontrol.hpp","c:/users/chester/git projects/robot-code/--working/include/battery.hpp","c:/users/chester/git projects/robot-code/--working/include/emath.hpp","c:/users/chester/git projects/robot-code/--working/include/pros/colors.h","c:/users/chester/git projects/robot-code/--working/include/display/lv_conf.h"],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":10498469444455392577,"detailed_name":"Claw","short_name_offset":0,"short_name_size":4,"kind":5,"hover":"","comments":"\r\n A class meant to interface the claw to the opcontrol task\r\n\r\n The following methods should be called from the opcontrol task\r\n    - clamp(): clamps the launcher\r\n    - coast(): coasts the claw\r\n    - release(): releases the claw\r\n    - pull(): pulls the claw push_back\r\n    - push(): returns the claw to its un-pulled position\r\n    - flip(): flips the claw 180Â°","declarations":["30:14-30:18|-1|1|4","33:14-33:18|-1|1|4","43:14-43:18|-1|1|4"],"spell":"19:7-19:11|-1|1|2","extent":"19:1-97:2|-1|1|0","bases":[],"derived":[],"types":[],"funcs":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"vars":[0,1,2,3],"instances":[4],"uses":["30:14-30:18|0|2|4","33:14-33:18|0|2|4","43:14-43:18|0|2|4","110:5-110:9|-1|1|4","115:47-115:51|-1|1|4","118:5-118:9|-1|1|4"]},{"id":1,"usr":17,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[0,1,2],"uses":[]},{"id":2,"usr":15367742584208778158,"detailed_name":"pros::Mutex","short_name_offset":6,"short_name_size":5,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[3],"uses":["24:11-24:16|-1|1|4","30:26-30:31|-1|1|4","33:26-33:31|-1|1|4","43:26-43:31|-1|1|4"]},{"id":3,"usr":15333955921748837064,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["24:5-24:9|0|2|4","30:20-30:24|0|2|4","30:45-30:49|0|2|4","33:20-33:24|0|2|4","33:45-33:49|0|2|4","33:70-33:74|0|2|4","43:20-43:24|0|2|4","43:45-43:49|0|2|4","43:70-43:74|0|2|4","43:95-43:99|0|2|4","46:25-46:29|0|2|4","49:23-49:27|0|2|4","52:23-52:27|0|2|4"]},{"id":4,"usr":13223131572302575246,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["30:51-30:56|-1|1|4","33:51-33:56|-1|1|4","33:76-33:81|-1|1|4","43:51-43:56|-1|1|4","43:76-43:81|-1|1|4","43:101-43:106|-1|1|4","46:31-46:36|-1|1|4","49:29-49:34|-1|1|4","52:29-52:34|-1|1|4"]},{"id":5,"usr":10171852459533126201,"detailed_name":"ClawArmControl","short_name_offset":0,"short_name_size":14,"kind":5,"hover":"","comments":"\r\n Class meant to control a robot claw arm\r\n\r\n See Claw and ArmControl for documentation\r\n\r\n Meant to have its run() method caleld each pass of the opcontrol while loop\r\n approx. every 20 ms","declarations":["115:14-115:28|-1|1|4"],"spell":"108:7-108:21|-1|1|2","extent":"108:1-140:2|-1|1|0","bases":[],"derived":[],"types":[],"funcs":[17,18,19,20,21],"vars":[4,5],"instances":[],"uses":["115:14-115:28|5|2|4"]},{"id":6,"usr":4128345622339988260,"detailed_name":"ArmControl","short_name_offset":0,"short_name_size":10,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[5],"uses":["111:5-111:15|-1|1|4","115:30-115:40|-1|1|4","121:5-121:15|-1|1|4"]}],"funcs":[{"id":0,"usr":10251027178040152776,"detailed_name":"void Claw::runActiveMotors(int voltage)","short_name_offset":11,"short_name_size":15,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"26:10-26:25|0|2|1","param_spellings":["26:30-26:37"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":1,"usr":14290463144872214201,"detailed_name":"void Claw::Claw(pros::Mutex &motorLock, pros::Motor &flipMotor)","short_name_offset":5,"short_name_size":4,"kind":9,"storage":1,"hover":"","comments":"Creates the claw object without an active claw motor. See below","declarations":[{"spell":"30:14-30:18|0|2|1","param_spellings":["30:34-30:43","30:59-30:68"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":2,"usr":10299649502034710055,"detailed_name":"void Claw::Claw(pros::Mutex &motorLock, pros::Motor &pullMotor, pros::Motor &activeMotor)","short_name_offset":5,"short_name_size":4,"kind":9,"storage":1,"hover":"","comments":"Creates the claw object without a claw flip motor. See below","declarations":[{"spell":"33:14-33:18|0|2|1","param_spellings":["33:34-33:43","33:59-33:68","33:84-33:95"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":3,"usr":3360413664082484622,"detailed_name":"void Claw::Claw(pros::Mutex &motorLock, pros::Motor &flipMotor, pros::Motor &pullMotor, pros::Motor &activeMotor)","short_name_offset":5,"short_name_size":4,"kind":9,"storage":1,"hover":"","comments":"\r\n Creates the claw object\r\n\r\n motorLock: the mutex it will attempt to take when accessing the motors\r\n flipMotor: the motor to use to flip the claw\r\n pullMotor: the motor to pull the claw back\r\n activeMotor: the motor to use to clamp the claw","declarations":[{"spell":"43:14-43:18|0|2|1","param_spellings":["43:34-43:43","43:59-43:68","43:84-43:93","43:109-43:120"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":4,"usr":298392340363885976,"detailed_name":"void Claw::addActiveMotor(pros::Motor &motor)","short_name_offset":11,"short_name_size":14,"kind":6,"storage":1,"hover":"","comments":"Adds a motor to the list to clamp the claw","declarations":[{"spell":"46:10-46:24|0|2|1","param_spellings":["46:39-46:44"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":5,"usr":14337228268865242168,"detailed_name":"void Claw::addFlipMotor(pros::Motor &motor)","short_name_offset":11,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"Adds a motor to the list to flip the claw","declarations":[{"spell":"49:10-49:22|0|2|1","param_spellings":["49:37-49:42"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":6,"usr":5012399373356498601,"detailed_name":"void Claw::addPullMotor(pros::Motor &motor)","short_name_offset":11,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"Adds a motor to the list to pull back the clawLock","declarations":[{"spell":"52:10-52:22|0|2|1","param_spellings":["52:37-52:42"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":7,"usr":11745271181581845104,"detailed_name":"void Claw::clearMotors()","short_name_offset":11,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"Clears all motors from the motor lists","declarations":[{"spell":"68:10-68:21|0|2|1","param_spellings":[]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":8,"usr":16285548348699084939,"detailed_name":"void Claw::clearActiveMotors()","short_name_offset":11,"short_name_size":17,"kind":6,"storage":1,"hover":"","comments":"Clears all motors from the list to clamp the claw","declarations":[{"spell":"71:10-71:27|0|2|1","param_spellings":[]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":9,"usr":15981449482042313751,"detailed_name":"void Claw::clearFlipMotors()","short_name_offset":11,"short_name_size":15,"kind":6,"storage":1,"hover":"","comments":"Clears all motors from the list to flip the claw","declarations":[{"spell":"74:10-74:25|0|2|1","param_spellings":[]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":10,"usr":11766087156778875255,"detailed_name":"void Claw::clearPullMotors()","short_name_offset":11,"short_name_size":15,"kind":6,"storage":1,"hover":"","comments":"Clears all motors from the list to pull back the claw","declarations":[{"spell":"77:10-77:25|0|2|1","param_spellings":[]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":11,"usr":17800225592850305680,"detailed_name":"void Claw::clamp()","short_name_offset":11,"short_name_size":5,"kind":6,"storage":1,"hover":"","comments":"Clamps the claw","declarations":[{"spell":"80:10-80:15|0|2|1","param_spellings":[]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":12,"usr":13234828532605378472,"detailed_name":"void Claw::coast()","short_name_offset":11,"short_name_size":5,"kind":6,"storage":1,"hover":"","comments":"Coast the claw, motors will stop and remain in their position while","declarations":[{"spell":"83:10-83:15|0|2|1","param_spellings":[]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":13,"usr":3110064267351589807,"detailed_name":"void Claw::release()","short_name_offset":11,"short_name_size":7,"kind":6,"storage":1,"hover":"","comments":"Releases the claw","declarations":[{"spell":"86:10-86:17|0|2|1","param_spellings":[]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":14,"usr":15163125944617824774,"detailed_name":"void Claw::pull()","short_name_offset":11,"short_name_size":4,"kind":6,"storage":1,"hover":"","comments":"Pulls the claw back","declarations":[{"spell":"89:10-89:14|0|2|1","param_spellings":[]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":15,"usr":30118601045193330,"detailed_name":"void Claw::push()","short_name_offset":11,"short_name_size":4,"kind":6,"storage":1,"hover":"","comments":"Returns the claw to its un-pulled position","declarations":[{"spell":"92:10-92:14|0|2|1","param_spellings":[]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":16,"usr":16300849684034293236,"detailed_name":"void Claw::flip()","short_name_offset":11,"short_name_size":4,"kind":6,"storage":1,"hover":"","comments":"Flips the claw 180Â°","declarations":[{"spell":"95:10-95:14|0|2|1","param_spellings":[]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":17,"usr":6498997387426951917,"detailed_name":"void ClawArmControl::ClawArmControl(ArmControl &ac, Claw &c)","short_name_offset":5,"short_name_size":14,"kind":9,"storage":1,"hover":"","comments":"Creates the Claw ARm Control object with the spcified arm control and claw","declarations":[{"spell":"115:14-115:28|5|2|1","param_spellings":["115:43-115:45","115:54-115:55"]}],"declaring_type":5,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":18,"usr":2774401560848030789,"detailed_name":"Claw ClawArmControl::getClaw()","short_name_offset":21,"short_name_size":7,"kind":6,"storage":1,"hover":"","comments":"Returns the claw object","declarations":[{"spell":"118:10-118:17|5|2|1","param_spellings":[]}],"declaring_type":5,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":19,"usr":8781660013416677704,"detailed_name":"ArmControl ClawArmControl::getArm()","short_name_offset":27,"short_name_size":6,"kind":6,"storage":1,"hover":"","comments":"Returns the arm control object","declarations":[{"spell":"121:16-121:22|5|2|1","param_spellings":[]}],"declaring_type":5,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":20,"usr":11037607874885947317,"detailed_name":"void ClawArmControl::run(bool clawPull, double armXVoltage, double armYVoltage, bool armTankScale, double armXSensitivity, double armYSensitivity)","short_name_offset":21,"short_name_size":3,"kind":6,"storage":1,"hover":"","comments":"Runs the Claw Arm Control with the claw at a neutral position, see below","declarations":[{"spell":"124:10-124:13|5|2|1","param_spellings":["124:19-124:27","124:36-124:47","124:56-124:67","124:74-124:86","124:95-124:110","124:119-124:134"]}],"declaring_type":5,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":21,"usr":3514798684532935184,"detailed_name":"void ClawArmControl::run(bool clawClamp, bool clawPull, double armXVoltage, double armYVoltage, bool armTankScale, double armXSensitivity, double armYSensitivity)","short_name_offset":21,"short_name_size":3,"kind":6,"storage":1,"hover":"","comments":"\r\n Runs Claw Arm Control by distributing the given values\r\n\r\n clawClamp: whether to clamp the claw\r\n clawPull: whether to pull the claw back\r\n armXVoltage: the movement voltage to move the arm left or right, ranging from -127 to 127\r\n armYVoltage: the movement voltage to move the arm up or down, ranging from -127 to 127\r\n armYankScale: whether to scale arm voltages by cos(45Â°)*100, used for single joystick movement\r\n armXSensitivity: the multiplier used to make arm movement left or right more or less sensitive. Output voltages will still be in valid ranges\r\n armYSensitivity: the multiplier used to make arm movement up or down more or less sensitive. Output voltages will still be in valid ranges","declarations":[{"spell":"138:10-138:13|5|2|1","param_spellings":["138:19-138:28","138:35-138:43","138:52-138:63","138:72-138:83","138:90-138:102","138:111-138:126","138:135-138:150"]}],"declaring_type":5,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]}],"vars":[{"id":0,"usr":18106926160632638250,"detailed_name":"int Claw::activeMotors","short_name_offset":10,"short_name_size":12,"hover":"","comments":"","declarations":[],"spell":"21:30-21:42|0|2|2","extent":"21:5-21:42|0|2|0","type":1,"uses":[],"kind":8,"storage":0},{"id":1,"usr":10454750721513102270,"detailed_name":"int Claw::flipMotors","short_name_offset":10,"short_name_size":10,"hover":"","comments":"","declarations":[],"spell":"22:30-22:40|0|2|2","extent":"22:5-22:40|0|2|0","type":1,"uses":[],"kind":8,"storage":0},{"id":2,"usr":9675034210578182608,"detailed_name":"int Claw::pullMotors","short_name_offset":10,"short_name_size":10,"hover":"","comments":"","declarations":[],"spell":"23:30-23:40|0|2|2","extent":"23:5-23:40|0|2|0","type":1,"uses":[],"kind":8,"storage":0},{"id":3,"usr":15186138699631850541,"detailed_name":"pros::Mutex Claw::lock","short_name_offset":18,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"24:17-24:21|0|2|2","extent":"24:5-24:21|0|2|0","type":2,"uses":[],"kind":8,"storage":0},{"id":4,"usr":17063489679864354346,"detailed_name":"Claw *ClawArmControl::claw","short_name_offset":22,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"110:11-110:15|5|2|2","extent":"110:5-110:15|5|2|0","type":0,"uses":[],"kind":8,"storage":0},{"id":5,"usr":582773959967422545,"detailed_name":"ArmControl *ClawArmControl::arm","short_name_offset":28,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"111:17-111:20|5|2|2","extent":"111:5-111:20|5|2|0","type":6,"uses":[],"kind":8,"storage":0},{"id":6,"usr":7665930928444584980,"detailed_name":"_CLAW_HPP_","short_name_offset":0,"short_name_size":10,"hover":"#define _CLAW_HPP_","comments":"","declarations":[],"spell":"2:9-2:19|-1|1|2","extent":"2:9-2:19|-1|1|0","uses":[],"kind":255,"storage":0}]}